@page "/CreatePage"
@using Domain.Dtos
@using HttpClients.ClientInterfaces
@inject IPageService pageService
@inject NavigationManager navMgr
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<div class="card">
    <div class="form-group field">
        <label>Title:</label>
        <input type="text" @bind="title"/>
    </div>
    <div class="form-group field">
        <label>Body:</label>
        <input type="text" @bind="body"/>
    </div>
    <div class="button-row">
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: red">@resultMsg</label>
        }
        <button @onclick="Create" class="createbtn"> Create </button>
    </div>
</div>

@code {
    private int creatorId = 1;  //CHANGE THIS WHEN ADD AUTHORIZATION
    private string title = "";
    private string body = "";
    private string resultMsg = "";
    private string color = "";

    private async Task Create()
    {
        //something about this to get the authorized users id
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        resultMsg = "";
        try
        {
            await pageService.CreateAsync(new PageCreationDto((int)creatorId, title, body));
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
        }
    }
}